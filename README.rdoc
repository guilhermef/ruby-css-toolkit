= Ruby CSS Toolkit 

This Gem is for optimizing and compressing CSS files.

== History

1.0.0 20 June 2010 Release of full implementation of yui compressor

0.9.0 20 June 2010 Initial Release
(Still needs line break option added)

== Available Tools

=== YUI CSS Compressor

This is a complete port of the YUI CSS compressor.

This includes the full test suite, so you (and I), can be sure that it 
behaves as expected.

=== CSS Tidy

This is port/rewrite of CSS Tidy.

Only the PHP version of the current CSS Tidy project is being
maintained, and so probably won't be used by rubyists, or those
who need a simple command line interface.

This port/rewrite fills this gap, and also provides a platform
for future enhancements and CSS3 support.

It stores the parsed CSS using a number of Ruby objects. This is then
optimised.

This approach allows the use of CSS hacks of various kinds - the optimisation 
code is hack aware, so (for example) won't merge or override rules in
a declaration that uses the box model hack.

The use of an object to hold the CSS in a tree structure allows extra
optimisations to be done beyond what is possible with a pure regex based
compressor.

This CSS Tidy has the following features:

* Compress colors

  #eeffaa        -> #efa
  
  rgb(35,48,98)  -> #233062
  
  #colors        -> color names
  
  color names    -> #colors
 
 also replaces invalid color names with valid #color values

* Lowercase selectors

  BODY -> body

* Compress font-weight
 
  bold   -> 700
  
  normal -> 400

* Remove last ;

  The ; character is a delimiter between CSS declarations, and is not required for the last one in a block.

* Optimise shorthands

merges the following where ALL individual declaration are made in a rule
 
 margin
 
 padding
 
 background

e.g
 	
 	padding-top:10px;

	padding-right:20px;

	padding-bottom:50px;

	padding-left:45px;
	
gets converted to:

 padding:10px 20px 50px 45px;

and rules that can be shorter also are fixed:

padding:10px 20px 50px 20px;

becomes:

padding:10px 20px 50px;

padding:10px 20px 10px 20px;

becomes:

padding:10px 20px;


* Merge selectors

If you have this rule:

.class1{padding:5px}

and later:

.class2{padding:5px}

this can be shortened to:

.class1,.class2{padding:5px}

In doing this there is no risk of breaking the cascade of selectors.

* add a timestamp

For documentation purposes.

We do NOT do the following (which the original did):

* sort properties

There is not much point; it can break hacks like the box model hack. 
We try to not break hacks(TM).

* sort selectors

Sorting by selector can causes breakages in the cascade.

* preserve CSS

The point of this seems to be to stop hacks being removed from the file.

* remove backslash

??


== TODO

* Make into a gem
* complete port/rewrite of CSS Tidy

=== CSS Tidy TODO
* port parser to Ruby (including any relevant bug fixes since v1.3)
* write new CSS optimizer built on stylesheet container class

== Use

Note that Tidy expects your CSS to be valid. This means:

* strings make sense (they open and close correctly, and have escapes internally as needed)
* media blocks and declarations open and close with braces

It is a good idea to use the W3C validator first.

=== Command Line

TODO



== Note on Patches/Pull Requests
 
* Fork the project on github.

* Make your change or bug fix.

* Add tests for the change. Better still write the tests first!
  
  NB: I WILL NOT ACCEPT PATCHES WITHOUT GOOD TESTS! :-)
  
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version go ahead.)

* Send me a pull request. Bonus points for topic branches.

== Tests

See above. No tests, no play.

YUI tests used CSS in files. These are in the form 'name.css' and 'name.css.min'
for 'css to process' and 'expected result'. The test suite will use any new
files automatically. This is to make is simpler to pull any changes and test 
cases over from YUI.

The CSS Tidy module also uses the YUI tests to ensure complete compatibility when 
a compatible set of parameters are chosen.


== Acknowledgements / Inspiration

This project has ported code from, or has used as inspiration the following:

* YUI Compressor                (http://developer.yahoo.com/yui/compressor/)
* CSS Min (Ryan Grove)          (http://github.com/rgrove/cssmin)
* Rainpress (Uwe L. Korn)       (http://github.com/sprsquish/rainpress)
* CSS Tidy (Florian Schmitz)    (http://csstidy.sourceforge.net/)
* Ruby CSS Parser (Alex Dunae)  (http://github.com/alexdunae/css_parser)  

== Copyright

Copyright (c) 2010 Richard Hulse. See LICENSE for details.

YUI CSS files in the test suite are Copyright (c) 2009, Yahoo! Inc. All rights reserved.
